{
  "Serilog": {
    "Using": [
      "Serilog.Expressions",
      "Serilog.Sinks.Console",
      "Serilog.Sinks.RollingFile"
    ],
    "MinimumLevel": "Debug",
    "WriteTo": [
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "WriteTo": [
              {
                "Name": "Console",
                "Args": {
                  "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                  "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{Source}] {Message:lj}{NewLine}{Exception}"
                }
              }
            ],
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Source is not null"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "WriteTo": [
              {
                "Name": "Console",
                "Args": {
                  "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                  "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
                }
              }
            ],
            "Filter": [
              {
                "Name": "ByExcluding",
                "Args": {
                  "expression": "Source is not null"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "WriteTo": [
              {
                "Name": "RollingFile",
                "Args": {
                  "pathFormat": "./logs/metric-{Hour}.json",
                  "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
              }
            ],
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "Tag = 'Metric'"
                }
              }
            ]
          }
        }
      }
    ],
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "SourceContext = 'Libplanet.Stun.TurnClient'"
        }
      }
    ]
  },
  "Headless": {
    "AppProtocolVersionString": "100321/6ec8E598962F1f475504F82fD5bF3410eAE58B9B/MEUCIQCGuo+2EnknG2fLEwrfiO9DjNqvu6DeHDZge1oNHeLULAIgLrsUXM7fuGMZd09MNFc2ufxzylJ6N94JFf3yOllWGDc=/ZHU4OmxhdW5jaGVydTQyOjIvZDcxOTI1NTk0NTA4MGRiOGRkOWFmNTM5M2UzOGI1N2UxM2YyNzIzYnU2OnBsYXllcnU0MjoxL2M1YWE5MTFlMTZjNzgzOTBiNTg5YTcxMTgyOGUxM2UxYzFiOTU5NzN1OTp0aW1lc3RhbXB1MTA6MjAyMi0xMS0wOWU=",
    "GenesisBlockPath": "",
    "StoreType": "memory",
    "StorePath": "",
    "Host": "localhost",
    "Port": 31234,
    "TrustedAppProtocolVersionSignerStrings": [],
    "NoMiner": false,
    "MinerBlockIntervalMilliseconds": 5000,
    "MinerPrivateKeyString": "185c48d5dabb8d44caa6db9c16697d84d64b02bc553af69bccff4199fd1506b1",
    "NetworkType": "default",
    "RpcServer": true,
    "RpcListenHost": "127.0.0.1",
    "RpcListenPort": 31238,
    "RpcRemoteServer": true,
    "GraphQLServer": true,
    "GraphQLHost": "127.0.0.1",
    "GraphQLPort": 31280,
    "NoCors": true,
    "Workers": 1000,
    "Confirmations": 0,
    "ChainTipStaleBehaviorType": "reboot"
  }
}
