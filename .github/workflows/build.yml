name: Build

on:
  push:
    branches:
      - main
      - development
      - rc-v*
    tags: ["*"]
  pull_request:
    types: [ready_for_review, opened, reopened, auto_merge_enabled]

env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on:
      labels: ["linux", "8cores"]
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - nekoyume
        targetPlatform:
          - Android
          - StandaloneWindows
          - StandaloneLinux64
          - StandaloneOSX
          - iOS

    steps:
      - name: Set CRLF
        run: |
          targetPlatform=${{ matrix.targetPlatform }}

          if [ "$targetPlatform" == "Android" ]; then
            git config --global core.autocrlf true
          fi

      - uses: actions/checkout@v3
        with:
          lfs: true
          submodules: true

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-ubuntu-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-ubuntu-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          androidKeystoreName: 9c-aos-signing-keystore.keystore # This file won't exist, but this property needs to exist.
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEY_ALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEY_ALIAS_PASS }}
          androidTargetSdkVersion: AndroidApiLevel28
          androidAppBundle: true
          androidExportType: 'androidAppBundle'
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: 'Editor.Builder.Build${{ matrix.targetPlatform }}'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      - name: Pack
        run: |
          targetPlatform=${{ matrix.targetPlatform }}

          if [ "$targetPlatform" == "Android" ]; then
            tr -d "\r" < .github/bin/pack.sh > .github/bin/pack_trimed.sh
            rm .github/bin/pack.sh
            mv .github/bin/pack_trimed.sh .github/bin/pack.sh
          fi

          sudo mv $GITHUB_WORKSPACE/build /tmp/player
          pip3 install wheel
          sudo bash .github/bin/pack.sh \
          /tmp/packages \
          "${{ matrix.targetPlatform }}" \
          "/tmp/player"

      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: /tmp/packages
          retention-days: 7
          if-no-files-found: error

      - run: sudo mv /tmp/packages ./packages # s3-upload-action이 상대 경로만 지원
        if: success()
        shell: bash

      - name: Upload Artifacts
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/heads/rc-') || github.ref == 'refs/heads/previewnet' || github.ref == 'refs/heads/2022q2' }}
        run: aws s3 cp packages s3://9c-artifacts/${{ github.sha }}/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
